{"ast":null,"code":"var _jsxFileName = \"/Users/rayssamoreira/Documents/task-board/src/App.js\";\n// import React, { Component } from 'react';\n// import './css/style.css'\n// export default class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//   render() {\n//     return (\n//       <div className=\"painel-todo\">\n//         <h3>FAZER</h3>\n//         {this.state.items.map((item, index) => (\n//         <div key={item.id} className=\"grid-task\">\n//           <TodoList items={this.state.items} itemTxt={item.text}/>\n//             <div className=\"remove\">\n//               <button onClick={() => this.handleDelete(index)} index={index} className=\"btn-remove\">x</button>\n//             </div>\n//         </div>\n//         ))}\n//         <div>\n//         <form onSubmit={this.handleSubmit}>\n//           <label className=\"justify-content-center\" htmlFor=\"new-todo\">\n//             O que precisa ser feito?\n//           </label>\n//           <div className=\"justify-content-center\">\n//           <input \n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           </div>\n//           <div className=\"justify-content-center\">\n//           <button className=\"btn-black\">ADICIONAR</button>\n//           </div>\n//           <div>\n//             <p className=\"text\">\n//               Você tem {this.state.items.length + 0} tarefas para serem concluídas\n//             </p>\n//           </div>\n//         </form>\n//         </div>\n//       </div>\n//     );\n//   }\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     console.log(this.state.text);\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text:''\n//     }));\n//   }\n//   handleDelete = itemId => {\n//     const items = this.state.items.filter(item => item.id !== itemId);\n//     this.setState({ items: items });\n//     console.log(itemId);\n//   }\n// }\n// class TodoList extends Component {\n//   render() {\n//     return (\n//         <ul>\n//           <div className=\"task\">{this.props.itemTxt}</div>\n//         </ul>\n//     );\n//   }\n// }\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nclass Items extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [{\n        id: 1,\n        value: 0\n      }, {\n        id: 2,\n        value: 10\n      }, {\n        id: 3,\n        value: 0\n      }]\n    };\n\n    this.handleDelete = itemId => {\n      const items = this.state.items.filter(item => item.id !== itemId);\n      this.setState({\n        items: items\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(App, {\n      key: item.id,\n      value: item.value,\n      onDelete: this.handleDelete,\n      id: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Items;","map":{"version":3,"sources":["/Users/rayssamoreira/Documents/task-board/src/App.js"],"names":["React","Component","Items","state","items","id","value","handleDelete","itemId","filter","item","setState","render","map"],"mappings":";AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACNC,MAAAA,KAAK,EAAE,CAAC;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAD,EAAsB;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAAtB,EAA4C;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAA5C;AADD,KADoB;;AAAA,SAK5BC,YAL4B,GAKbC,MAAM,IAAI;AACvB,YAAMJ,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBK,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYG,MAA5C,CAAd;AACA,WAAKG,QAAL,CAAc;AAAEP,QAAAA,KAAK,EAAEA;AAAT,OAAd;AACD,KAR2B;AAAA;;AAU5BQ,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,KAAL,CAAWC,KAAX,CAAiBS,GAAjB,CAAqBH,IAAI,IACxB,oBAAC,GAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACL,EADZ;AAEE,MAAA,KAAK,EAAEK,IAAI,CAACJ,KAFd;AAGE,MAAA,QAAQ,EAAE,KAAKC,YAHjB;AAIE,MAAA,EAAE,EAAEG,IAAI,CAACL,EAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADH,CADF;AAYD;;AAvB2B;;AA0B9B,eAAeH,KAAf","sourcesContent":["// import React, { Component } from 'react';\n// import './css/style.css'\n\n// export default class App extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = { items: [], text: '' };\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n\n//   render() {\n//     return (\n//       <div className=\"painel-todo\">\n//         <h3>FAZER</h3>\n//         {this.state.items.map((item, index) => (\n          \n//         <div key={item.id} className=\"grid-task\">\n//           <TodoList items={this.state.items} itemTxt={item.text}/>\n//             <div className=\"remove\">\n//               <button onClick={() => this.handleDelete(index)} index={index} className=\"btn-remove\">x</button>\n//             </div>\n//         </div>\n//         ))}\n        \n//         <div>\n//         <form onSubmit={this.handleSubmit}>\n//           <label className=\"justify-content-center\" htmlFor=\"new-todo\">\n//             O que precisa ser feito?\n//           </label>\n\n//           <div className=\"justify-content-center\">\n//           <input \n//             id=\"new-todo\"\n//             onChange={this.handleChange}\n//             value={this.state.text}\n//           />\n//           </div>\n\n//           <div className=\"justify-content-center\">\n//           <button className=\"btn-black\">ADICIONAR</button>\n//           </div>\n\n//           <div>\n//             <p className=\"text\">\n//               Você tem {this.state.items.length + 0} tarefas para serem concluídas\n//             </p>\n//           </div>\n\n//         </form>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   handleChange(e) {\n//     this.setState({ text: e.target.value });\n//   }\n\n//   handleSubmit(e) {\n//     e.preventDefault();\n//     if (this.state.text.length === 0) {\n//       return;\n//     }\n//     console.log(this.state.text);\n//     const newItem = {\n//       text: this.state.text,\n//       id: Date.now()\n//     };\n//     this.setState(state => ({\n//       items: state.items.concat(newItem),\n//       text:''\n//     }));\n//   }\n\n//   handleDelete = itemId => {\n//     const items = this.state.items.filter(item => item.id !== itemId);\n//     this.setState({ items: items });\n//     console.log(itemId);\n//   }\n  \n// }\n\n// class TodoList extends Component {\n//   render() {\n//     return (\n//         <ul>\n//           <div className=\"task\">{this.props.itemTxt}</div>\n//         </ul>\n//     );\n//   }\n// }\nimport React, { Component } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n \nclass Items extends Component {\n  state = {\n    items: [{ id: 1, value: 0 }, { id: 2, value: 10 }, { id: 3, value: 0 }]\n  };\n \n  handleDelete = itemId => {\n    const items = this.state.items.filter(item => item.id !== itemId);\n    this.setState({ items: items });\n  };\n \n  render() {\n    return (\n      <React.Fragment>\n        {this.state.items.map(item => (\n          <App\n            key={item.id}\n            value={item.value}\n            onDelete={this.handleDelete}\n            id={item.id}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n \nexport default Items;"]},"metadata":{},"sourceType":"module"}